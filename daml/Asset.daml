module Asset where

import Daml.Script
import DA.Assert
import DA.Optional

data AssetType = AssetType with
    -- The issuer of the asset.
    issuer: Party
    -- A symbol for the asset. Uniquely identifies the type of asset amongst
    -- those issued by the issuer
    symbol: Text    
  deriving (Eq, Show)

template Asset
  with
    assetType : AssetType
    owner : Party
    amount : Decimal
  where
    signatory assetType.issuer, owner
    ensure amount>0.0

template AssetTransfer
  with
    asset : Asset
    recipient : Party
  where
    signatory (signatory asset)
    observer recipient
    -- key (asset.owner, fromSome betCid) : (Party, ContractId Bet)
    -- maintainer key._1
    ensure asset.amount>0.0

    choice Cancel_Transfer : ContractId Asset
      controller asset.owner 
      do
        create asset

    choice Reject_Transfer : ContractId Asset
      controller recipient
      do
        create asset

    choice Accept_Transfer : ContractId Asset
      controller recipient, asset.assetType.issuer
      do
        create asset with
          owner = recipient